server:
  port: 8083

spring:
  application:
    name: tickets
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/tickets
    username: postgres
    password: ${DB_PASSWORD:0000}
  jpa:
    hibernate:
      ddl-auto: update
    database: POSTGRESQL
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      bootstrap-servers: localhost:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.type.mapping: ticketP:com.windlogs.tickets.kafka.TicketP,logEvent:com.windlogs.tickets.kafka.LogEvent

# Exception Analyzer Configuration
exception:
  analyzer:
    api:
      url: ${EXCEPTION_ANALYZER_URL:http://localhost:8000}

# Eureka client configuration
eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_SERVER_URL:http://localhost:8761/eureka/}
    fetch-registry: true
    register-with-eureka: true
  instance:
    prefer-ip-address: true

# Feign client configuration
feign:
  client:
    config:
      default:
        connectTimeout: 5000
        readTimeout: 5000
        loggerLevel: full
  circuitbreaker:
    enabled: true

# Logging configuration
logging:
  level:
    com:
      windlogs:
        tickets:
          feign: DEBUG
    org:
      springframework:
        cloud:
          openfeign: DEBUG 